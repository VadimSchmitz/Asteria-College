const mix = require('laravel-mix');

/*
 |--------------------------------------------------------------------------
 | Mix Asset Management
 |--------------------------------------------------------------------------
 |
 | Mix provides a clean, fluent API for defining some Webpack build steps
 | for your Laravel application. By default, we are compiling the Sass
 | file for the application as well as bundling up all the JS files.
 |
 */
mix.sourceMaps();
mix.autoload({
    jquery: ['$', 'jQuery', 'window.jQuery'],
});
mix.js('resources/assets/scripts/app.js', 'public/assets/scripts/app.js');
mix.js('resources/assets/plugins/AdminLTE.js', 'public/assets/plugins');
mix.sass('resources/assets/scss/app.scss', 'public/assets/css/app.css', {implementation: require('node-sass')});
mix.sass('resources/assets/scss/element/index.scss', 'public/assets/css/element.css', {implementation: require('node-sass')});

mix.copy('resources/assets/img/*', 'public/assets/img');
mix.copy('resources/assets/plugins/fontawesome-all.min.js', 'public/assets/plugins');

mix.webpackConfig(webpack => {// Override webpack.config.js, without editing the file directly.
    return {
        plugins: [
            // Using the NL language for Element components
            new webpack.NormalModuleReplacementPlugin(/element-ui[\/\\]lib[\/\\]locale[\/\\]lang[\/\\]zh-CN/, 'element-ui/lib/locale/lang/nl')
        ],
        module: {
            rules: [
                {
                    test: /\.(png|svg|jpg|gif)$/,
                    use: [ 'file-loader'],
                },
                {
                    test: /\.js$/,
                    loader: 'babel-loader',
                    exclude: file => (
                        /node_modules/.test(file) &&
                        !/\.vue\.js/.test(file)
                    )
                }
            ],
        },
        resolve: {
            alias: {
                vue$: 'vue/dist/vue.runtime.esm.js'
            }
        },
    };
});

mix.browserSync('http://localhost:8000');
// Full API
// mix.js(src, output);
// mix.react(src, output); <-- Identical to mix.js(), but registers React Babel compilation.
// mix.preact(src, output); <-- Identical to mix.js(), but registers Preact compilation.
// mix.coffee(src, output); <-- Identical to mix.js(), but registers CoffeeScript compilation.
// mix.ts('resources/jsÃ¥, 'public/js'); <-- TypeScript support. Requires tsconfig.json to exist in the same folder as webpack.mix.js
// mix.extract();
// mix.sass(src, output);
// mix.less(src, output);
// mix.stylus(src, output);
// mix.postCss(src, output, [require('postcss-some-plugin')()]);

// mix.combine(files, destination);
// mix.babel(files, destination); <-- Identical to mix.combine(), but also includes Babel compilation.
    // .copy('node_modules/jquery/dist/jquery.js', 'public/assets/plugins');
// mix.minify();
// mix.sourceMaps(); // Enable sourcemaps
// mix.version(); // Enable versioning.
// mix.disableNotifications();
// mix.setPublicPath('path/to/public');
// mix.setResourceRoot('prefix/for/resource/locators');
// mix.autoload({}); // Will be passed to Webpack's ProvidePlugin.

// mix.babelConfig({}); <-- Merge extra Babel configuration (plugins, etc.) with Mix's default.
// mix.then(function () {}) <-- Will be triggered each time Webpack finishes building.
// mix.override(function (webpackConfig) {}) <-- Will be triggered once the webpack config object has been fully generated by Mix.
// mix.dump(); <-- Dump the generated webpack config object to the console.
// mix.extend(name, handler) <-- Extend Mix's API with your own components.
// mix.options({
//     extractVueStyles: false, // Extract .vue component styling to file, rather than inline.
//     // globalVueStyles: file, // Variables file to be imported in every component.
//     processCssUrls: false, // Process/optimize relative stylesheet url()'s. Set to false, if you don't want them touched.
//     purifyCss: false, // Remove unused CSS selectors.
//     terser: {}, // Terser-specific options. https://github.com/webpack-contrib/terser-webpack-plugin#options
//     postCss: [] // Post-CSS options: https://github.com/postcss/postcss/blob/master/docs/plugins.md
// });
